name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions: read-all
  
jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.actor!= 'depbot'   # ignore the pull request which comes from user depbot.
    permissions:
      actions: read
      contents: read
      security-events: write
      checks: write
      pull-requests: write
      
    steps:
    - name: Checkout Code  
      uses: actions/checkout@v5
      with:
        fetch-depth: 1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: |
          9.x

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet run --configuration Release --no-build --no-restore -- -coverage --coverage-output-format cobertura --report-trx

#    - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
#      uses: danielpalme/ReportGenerator-GitHub-Action@v5
#      with:
#        reports: "**/*.coverage" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
#        targetdir: "coveragereport" # REQUIRED # The directory where the generated report should be saved.
#        reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
#        verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
#        title: "Code Coverage" # Optional title.
#        tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
#        customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
#        toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.

#    - name: Upload Combined Coverage XML
#      uses: actions/upload-artifact@v4
#      with:
#        name: CoverageReport 
#        path: coveragereport
   
#    - name: Publish Code Coverage Report
#      uses: irongut/CodeCoverageSummary@v1.3.0
#      with:
#        filename: "coveragereport/*"
#        badge: true
#        fail_below_min: false # just informative for now
#        format: markdown
#        hide_branch_rate: false
#        hide_complexity: false
#        indicators: true
#        output: both
#        thresholds: "10 30"

    - name: Upload Test Result Files
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ${{ github.workspace }}/**/TestResults/**/*
        retention-days: 5

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: "${{ github.workspace }}/**/*.trx"
